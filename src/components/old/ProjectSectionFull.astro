---
import ButtonLink from "./ButtonLink.astro";

/**
 * @name ProjectSectionFull
 * @desc A simple component to display a Card component and an image side by side.
 * @param {string} title - The title of the component.
 * @param {string} content - The text to display.
 * @param {string[]} tags - An array of tags to display.
 * @param {string} link - The link to an external site.
 * @param {string} image - The image to display.
 * @param {string} alt - The image alt text.
 * @param {boolean} nextBtn - Whether to show a next button.
 * @param {boolean} hidden - Whether to hide the component.
 */
interface Props {
  title?: string;
  content?: string;
  tags?: string[];
  link?: string;
  nextBtn?: boolean;
  prevBtn?: boolean;
  endBtn?: boolean;
  image?: {
    src?: string;
    width?: number;
    height?: number;
    format?: "avif" | "png" | "webp" | "jpeg" | "jpg" | "svg" | "tiff" | "gif";
  };
  alt?: string;
  hidden?: boolean;
}

const {
  title = "",
  content = "",
  tags = [],
  link = "",
  nextBtn = false,
  prevBtn = false,
  endBtn = false,
  image = {
    src: "",
    width: 0,
    height: 0,
    format: "webp",
  },
  alt = "",
  hidden = false,
} = Astro.props;

// This is a hackey solution, but it works for now.
// Grab all image files
const allImages = await Astro.glob("../assets/images/*.webp");

// Find the image file that matches the image prop
const projectImage = allImages.find((img) =>
  img.default.src.includes(image.src)
);

// Split content into paragraphs
const contentParagraphs = content.split("\n");
---

<section
  class={hidden ? "project-section-full hidden" : "project-section-full"}
>
  <div class="project-container">
    <!-- Title -->
    <h3
      class="secondary-title shakeable slide-in-bottom title-black-bg uppercase"
    >
      {title}
    </h3>

    <!-- Tags -->
    <div class="tag-box">
      {
        tags ? (
          <div class="tags">
            {tags.map((tag) => (
              <p class="tag slide-in-top">{tag}</p>
            ))}
          </div>
        ) : null
      }
    </div>
    <div class="flex-columns">
      <!-- Content Column -->
      <div class="text-box left-column">
        <!-- Content -->
        <div class="content-box">
          {
            contentParagraphs.map((paragraph, index) => (
              <div
                class={
                  index > 0
                    ? `gap text-box-center card shakeable slide-in-left-d${index}`
                    : `gap text-box-center card shakeable slide-in-left`
                }
              >
                {/*Place first 4 words of each paragraph inside a span */}
                <span class="info-text first-words">
                  {paragraph.split(" ").slice(0, 4).join(" ")}
                </span>
                {/*Place the rest of the paragraph inside a span */}
                <span class="info-text">
                  {paragraph.split(" ").slice(4).join(" ")}
                </span>
              </div>
            ))
          }
          <div class="button-box">
            {
              link ? (
                <ButtonLink
                  btnText="Visit"
                  btnLink={link}
                  btnTarget="_blank"
                  size="medium"
                  animation="fade"
                />
              ) : null
            }
          </div>
        </div>
      </div>

      <!-- Image -->
      <div class="slide-in-right image-box project-image right-column">
        <img
          src={projectImage.default.src}
          alt={alt}
          width={projectImage.default.width}
          height={projectImage.default.height}
        />
      </div>
    </div>
    <div class="button-box-bottom">
      {
        prevBtn ? (
          <div class="left-btn full-screen-btn">
            <ButtonLink
              btnText="<- Previous Project"
              btnTarget="_self"
              customClass="prev-btn"
              size="medium"
              animation="fade"
            />
          </div>
        ) : null
      }
      {
        nextBtn ? (
          <div class="right-btn full-screen-btn">
            <ButtonLink
              btnText="Next Project ->"
              btnTarget="_self"
              customClass="next-btn"
              size="medium"
              animation="fade"
            />
          </div>
        ) : null
      }
      {
        endBtn ? (
          <div class="right-btn full-screen-btn">
            <ButtonLink
              btnText="All Projects..."
              btnTarget="_self"
              size="medium"
              animation="fade"
              customClass="next-btn"
            />
          </div>
        ) : null
      }
    </div>
  </div>
</section>

<style>
  .project-container {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: space-around;
    width: 100%;
    max-width: 1200px;
    height: 80%;
    max-height: 800px;

    border-radius: 0.25rem;
    border: 0.125rem solid var(--accent);
    color: var(--primary);
    box-shadow: 6px 6px 0px var(--accent-transparent);
    background-color: var(--secondary);
    padding: 1rem;
    transition: all 0.2s ease-in-out;
    -webkit-tap-highlight-color: transparent;
  }

  /* Content */
  .flex-columns {
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: center;
  }

  .left-column {
    width: 50%;
  }

  .right-column {
    width: 50%;
  }

  .content-box {
    max-width: 500px;
    margin: 0 auto;
  }

  /* Image */
  .project-image {
    display: flex;
    overflow: hidden;
    position: relative;
    padding: 0;
  }

  img {
    display: block;
    padding: 1rem;
    width: auto;
    max-height: 400px;
    max-width: 100%;
    margin: 0 auto;
  }

  .tag-box {
    display: flex;
    justify-content: center;
    margin-bottom: 1rem;
  }

  .info-text {
    font-size: var(--font-size-4);
  }

  .first-words {
    font-weight: 600;
  }

  .button-box-bottom {
    display: flex;
    flex-grow: 0;
    justify-content: center;
    margin: 1rem auto;
    gap: 1rem;
  }

  /* Buttons */
  /*
  .right-btn {
    position: absolute;
    right: 6rem;
  }

  .left-btn {
    position: absolute;
    left: 6rem;
  } */

  .gap {
    margin-bottom: 1rem;
  }

  .gap-2 {
    margin-bottom: 2rem;
  }

  @media screen and (max-width: 1100px) {
    .project-section-full {
      padding: 0 2%;
    }
    .button-box {
      display: flex;
      margin-top: 1rem;
      gap: 1rem;
      flex-direction: column;
    }

    .fullscreen-btn {
      display: none;
    }

    .right-btn {
      position: relative;
      /* right: 0; */
    }

    .left-btn {
      position: relative;

      /* left: 0; */
    }
  }

  @media screen and (max-width: 800px) {

    .project-container {
      max-height: fit-content;

    }

    .content-box {
      width: 100%;
      max-width: fit-content;
    }

    .left-column {
      width: 100%;
      max-width: 500px;
      text-align: center;
    }

    .right-column {
      width: 100%;
      max-width: 500px;
      text-align: center;
      padding: 1rem;
    }

    .secondary-title {
      width: 100%;
    }

    .secondary-title {
      text-align: center;
    }
    .flex-columns {
      flex-direction:column-reverse;
    }

  }
</style>
