---
import Card from "./Card.astro";
import ButtonLink from "./ButtonLink.astro";

/**
 * @name ProjectSectionFull
 * @desc A simple component to display a Card component and an image side by side.
 * @param {string} title - The title of the component.
 * @param {boolean} reverse - Whether to reverse the order of the image and text.
 * @param {string} info - The text to display.
 * @param {string[]} tags - An array of tags to display.
 * @param {string} blogLink - The link to the blog post.
 * @param {string} extLink - The link to an external site.
 * @param {string} image - The image to display.
 * @param {string} imgAlt - The image alt text.
 * @param {string} imgLink - The image link.
 * @param {boolean} nextBtn - Whether to show a next button.
 */
interface Props {
  title?: string;
  info?: string;
  tags?: string[];
  blogLink?: string;
  extLink?: string;
  reverse?: boolean;
  nextBtn?: boolean;
  image?: {
    src?: string;
    width?: number;
    height?: number;
    format?: "avif" | "png" | "webp" | "jpeg" | "jpg" | "svg" | "tiff" | "gif";
  };
  imgAlt?: string;
  imgLink?: string;
}

const {
  title = "",
  info = "",
  tags = [],
  blogLink = "",
  extLink = "",
  reverse = false,
  nextBtn = false,
  image = {
    src: "",
    width: 0,
    height: 0,
    format: "webp",
  },
  imgAlt = "",
  imgLink = "",
} = Astro.props;

// This is a hackey solution, but it works for now.
// Grab all image files
const allImages = await Astro.glob("../assets/images/*.webp");

// Find the image file that matches the image prop
const projectImage = allImages.find((img) =>
  img.default.src.includes(image.src)
);

// Split info into paragraphs
const infoParagraphs = info.split("\n");
---

<section class="project-section-full">
  <div class={reverse ? "flex-columns-reverse" : "flex-columns"}>
    <div
      class={reverse ? "fade-in text-box text-box-reverse" : "fade-in text-box"}
    >
      <div class="center-title gap">
        <h3
          class="secondary-title shakeable slide-in-bottom title-black-bg uppercase"
        >
          {title}
        </h3>
      </div>
      <div class="tag-box">
        {
          tags ? (
            <div class="tags">
              {tags.map((tag) => (
                <a
                  class="tag slide-in-left"
                  href={`/tags/${tag.toLowerCase()}`}
                >
                  {tag}
                </a>
              ))}
            </div>
          ) : null
        }
      </div>
      <div class="gap-2">
        {
          infoParagraphs.map((paragraph) => (

          <div class="gap text-box-center slide-in-left card shakeable">
              <p class="slide-in-left info-text">{paragraph}</p>
            </div>
          ))
        }
    </div>
      <div class="button-box">
        {
          extLink ? (
            <ButtonLink btnText="Visit" btnLink={extLink} btnTarget="_blank" size="medium"/>
          ) : null
        }
        {
          nextBtn ? (
            <ButtonLink
              btnText="Next Project"
              btnTarget="_self"
              customClass="next-btn"
              size="medium"
            />
          ) : null
        }
      </div>
    </div>
    <a class="fade-in image-box" href={imgLink} target="_blank">
      <img
        src={projectImage.default.src}
        alt={imgAlt}
        width={projectImage.default.width}
        height={projectImage.default.height}
      />
    </a>
  </div>
</section>

<style>
  .tag-box {
    display: flex;
    justify-content: center;
    margin-bottom: 1rem;
  }

  .info-text {
    font-size: 1.3rem;
    line-height: 2.2rem;
  }

  .button-box {
    display: flex;
    margin-top: 1rem;
    gap: 1rem;
  }

  .gap {
    margin-bottom: 1rem;
  }

  .gap-2 {
    margin-bottom: 2rem;
  }
</style>
