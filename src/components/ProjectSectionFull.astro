---
import Card from "./Card.astro";
import ButtonLink from "./ButtonLink.astro";
import githubIcon from "../assets/github-mark-white.png";
import emailIcon from "../assets/email_icon.svg";
import Social from "../components/Social.astro";

/**
 * @name ProjectSectionFull
 * @desc A simple component to display a Card component and an image side by side.
 * @param {string} title - The title of the component.
 * @param {boolean} reverse - Whether to reverse the order of the image and text.
 * @param {string} info - The text to display.
 * @param {string[]} tags - An array of tags to display.
 * @param {string} blogLink - The link to the blog post.
 * @param {string} extLink - The link to an external site.
 * @param {string} image - The image to display.
 * @param {string} imgAlt - The image alt text.
 * @param {string} imgLink - The image link.
 * @param {boolean} nextBtn - Whether to show a next button.
 * @param {boolean} hidden - Whether to hide the component.
 */
interface Props {
  title?: string;
  info?: string;
  tags?: string[];
  blogLink?: string;
  extLink?: string;
  reverse?: boolean;
  nextBtn?: boolean;
  prevBtn?: boolean;
  endBtn?: boolean;
  image?: {
    src?: string;
    width?: number;
    height?: number;
    format?: "avif" | "png" | "webp" | "jpeg" | "jpg" | "svg" | "tiff" | "gif";
  };
  imgAlt?: string;
  imgLink?: string;
  hidden?: boolean;
}

const {
  title = "",
  info = "",
  tags = [],
  blogLink = "",
  extLink = "",
  reverse = false,
  nextBtn = false,
  prevBtn = false,
  endBtn = false,
  image = {
    src: "",
    width: 0,
    height: 0,
    format: "webp",
  },
  imgAlt = "",
  imgLink = "",
  hidden = false,
} = Astro.props;

// This is a hackey solution, but it works for now.
// Grab all image files
const allImages = await Astro.glob("../assets/images/*.webp");

// Find the image file that matches the image prop
const projectImage = allImages.find((img) =>
  img.default.src.includes(image.src)
);

// Split info into paragraphs
const infoParagraphs = info.split("\n");

---

<section class={hidden ? 'project-section-full hidden' : 'project-section-full'}>
  <div class={reverse ? "flex-columns-reverse" : "flex-columns"}>
    <div
      class={reverse ? "fade-in text-box text-box-reverse" : "fade-in text-box"}
    >
      <div class="center-title gap">
        <h3
          class="secondary-title shakeable fade-in title-black-bg uppercase"
        >
          {title}
        </h3>
      </div>
      <div class="tag-box">
        {
          tags ? (
            <div class="tags">
              {tags.map((tag) => (
                // <a
                //   class={reverse ? 'tag fade-in' : 'tag fade-in'}
                //   href={`/tags/${tag.toLowerCase()}`}
                // >
                //   {tag}
                // </a>
                <p
                class={reverse ? 'tag fade-in' : 'tag fade-in'}
                >
                    {tag}
                  </p>
              ))}
            </div>
          ) : null
        }
      </div>
      <div class="gap-2">
        {
          infoParagraphs.map((paragraph) => (

          <div class={reverse ? 'gap text-box-center fade-in card shakeable' : 'gap text-box-center fade-in card shakeable'}>
              {/*Place first 4 words of each paragraph inside a span */}
              <span class="info-text first-words">{paragraph.split(' ').slice(0, 4).join(' ')}</span>
              {/*Place the rest of the paragraph inside a span */}
              <span class="info-text">{paragraph.split(' ').slice(4).join(' ')}</span>

            </div>
          ))
        }
        {endBtn ?
          <div class={reverse ? 'gap text-box-center fade-in card shakeable' : 'gap text-box-center fade-in card shakeable'}>
            <p class="info-text">For more projects, check out my GitHub!</p>
          </div>
        : null
        }
    </div>
      <div class="button-box">
        {
          extLink ? (
            <ButtonLink btnText="Visit" btnLink={extLink} btnTarget="_blank" size="medium" animation="fade"/>
          ) : null
        }
        {
          prevBtn ? (
            <ButtonLink
              btnText="<- Previous Project"
              btnTarget="_self"
              customClass="prev-btn"
              size="medium"
              animation="fade"
            />
          ) : null
        }
        {
          nextBtn ? (
            <ButtonLink
              btnText="Next Project ->"
              btnTarget="_self"
              customClass="next-btn"
              size="medium"
              animation="fade"
            />
          ) : null
        }
        {
          endBtn ? (
            <ButtonLink
              btnText="GitHub"
              btnLink="https://github.com/bbgard"
              btnTarget="_blank"
              size="medium"
              animation="fade"
            />
          ) : null
        }

      </div>
    </div>
    <a class="fade-in image-box" href={imgLink} target="_blank">
      <img
        src={projectImage.default.src}
        alt={imgAlt}
        width={projectImage.default.width}
        height={projectImage.default.height}
      />
    </a>
  </div>

  {endBtn ? (

    <ButtonLink
      btnText="Next Section..."
      btnLink="#contact"
      btnTarget="_self"
      size="large"
      animation="fade"
      customClass="scroll-btn"
    />

  ) : null}

</section>


<style>

.project-section-full {
  margin: 0 auto;
  width: 100%;
  max-width: 100%;
  padding: 0 10%;
}

  .tag-box {
    display: flex;
    justify-content: center;
    margin-bottom: 1rem;
  }

  .info-text {
    font-size: var(--font-size-4);
  }

  .first-words {
    font-weight: 500;
  }

  .button-box {
    display: flex;
    margin-top: 1rem;
    gap: 1rem;
  }

  .gap {
    margin-bottom: 1rem;
  }

  .gap-2 {
    margin-bottom: 2rem;
  }

  @media screen and (max-width: 1100px) {

    .project-section-full {
    padding: 0 2%;
  }
    .button-box {
      flex-direction: column;
      gap: 1rem;
    }
  }

</style>
