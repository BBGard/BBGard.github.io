---
import ButtonLink from "./ButtonLink.astro";
interface Props {
  // The image to display on the card.
  image?: {
    src?: string;
    width?: number;
    height?: number;
    format?: "avif" | "png" | "webp" | "jpeg" | "jpg" | "svg" | "tiff" | "gif";
  };

  // The alt text of the image.
  alt: string;

  // The title of the card.
  title: string;

  // The description of the card.
  content: string;

  // The tags of the card.
  tags?: string[];

  // Link to the project
  link: string;
}

const {
  image = {
    src: "https://images.unsplash.com/photo-1559209172-0ff8f6d49ff7?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=500&q=80",
    width: 200,
    height: 200,
    format: "jpg",
  },
  alt = "A kitten sits patiently between a terracotta pot and decorative grasses.",
  title = "Mittens",
  content = "This kitten is as cute as he is playful. Bring him home today!",
  tags = ["kitten", "playful", "adorable"],
  link = "https://example.com",
} = Astro.props;

// This is a hackey solution, but it works for now.
// Grab all image files
const allImages = await Astro.glob("../assets/images/*.webp");

// Find the image file that matches the image prop
const projectImage = allImages.find((img) =>
  img.default.src.includes(image.src)
);

const contentParagraphs = content.split("\n");
---

<sl-card class="card-overview shakeable">
  <!-- Image Slot -->
  <div slot="image" class="fade-in image-box project-image shakeable">
    <img
      src={projectImage.default.src}
      alt={alt}
      width={projectImage.default.width}
      height={projectImage.default.height}
    />
  </div>

  <!-- Card Content -->
  <div class="card-content">
    <p class="fade-in gap"><strong>{title}</strong><br /></p>
    <div class="gap-2">
      {
        contentParagraphs.map((paragraph, index) => (
          <div
            class={
              index > 0 ? `gap slide-in-left-d${index}` : `gap slide-in-left`
            }
          >
            {/*Place first 4 words of each paragraph inside a span */}
            <span class="info-text first-words">
              {paragraph.split(" ").slice(0, 4).join(" ")}
            </span>
            {/*Place the rest of the paragraph inside a span */}
            <span class="info-text">
              {paragraph.split(" ").slice(4).join(" ")}
            </span>
          </div>
        ))
      }
    </div>
  </div>

  <!-- Footer -->
  <div slot="footer" class="card-footer">
    <div class="button-box">
      {
        link ? (
          <ButtonLink
            btnText="Visit"
            btnLink={link}
            btnTarget="_blank"
            size="medium"
            animation="fade"
          />
        ) : null
      }
    </div>
  </div>
</sl-card>

<style>
  /* Card */
  .card-overview::part(base) {
    display: flex;
    border-radius: 0.25rem;
    border: 0.125rem solid var(--accent);
    color: var(--primary);
    box-shadow: 6px 6px 0px var(--accent-transparent);
    background-color: var(--secondary);
    padding: 1rem;
    transition: all 0.2s ease-in-out;
    -webkit-tap-highlight-color: transparent;
  }
  .card-overview::part(base):hover {
    box-shadow: 3px 3px 0px var(--accent-color-transparent);
  }

  .card-overview {
    max-width: 500px;
    display: flex;
    gap: 1rem;
    padding: 1rem;
    align-items: stretch;
  }

  /* Content */
  .card-overview::part(body) {
    display: flex;
    flex-direction: column;
    gap: 1rem;
  }

  .card-content {
    height: 100%;
    align-content: flex-end;
  }

  .card-overview::part(image) {
    display: flex;
    align-items: center;
    justify-content: center;
    flex-grow: 1;
  }


  /* Image */
  .project-image {
    display: flex;
    width: 100%;
    overflow: hidden;
    position: relative;
    padding: 0;
  }

  img {
    display: block;
    padding: 1rem;
    width: auto;
    max-height: 300px;
    max-width: 100%;
    margin: 0 auto;
  }

  /* Footer */
  .card-overview::part(footer) {
    display: flex;
    justify-content: center;
  }

  .card-overview [slot="footer"] {
    display: flex;
    justify-content: flex-start;
    align-items: center;
    gap: 1rem;
    flex-grow: 0;
  }
</style>
